#+title: Call of the Stones - GitHub GameOff 2022

The Jam Website: https://itch.io/jam/game-off-2022

* The Concept

I would like to make a minimal, atmospheric 2D platformer directly inspired by the game [[https://archive.org/details/Knytt/][Knytt]].

The world will be comprised of a grid of screens, each of which having its own character and "area".  There will be occasional background music clips of 10-20 seconds as well as atmospheric noise in some areas.

The goal will be to explore and pick up a series of items you need to win the game.

* Game Mechanics

You can run around around the world freely, climb up walls and jump over obstacles.

You might be able to pick up powerup items that enable you to reach new areas a la Metroid.

There might be a mechanic for helping you find your way to the next item like in Knytt.

* Cliche Ideas

- He left no stone unturned
- Clear the air
- As old as time
- Ear to the ground
- Built to last
- Back to square one

The concept:

You are a character who lives in a realm where there has been peace for a long time.  One day, the Puria Stones that protect the realm were stolen and hidden across the land.  Since then, the air has become unclean and it it is not safe to stay.

Your character must venture through the different areas of the realm to find all the missing stones and reassemble them so that the air becomes clear once again.  The stones all make their own special sound, so you need to listen for them to find your way.

Once you find them, you must head back to the town square (the starting location) to reassemble the altar of the Puria Stones!

** Name Ideas

- The Sound of Stones
- Call of the Stones

* Things to Implement

- The concept of a screen, maybe the same size as the screen itself, reasonable tile size
- Transitions between screens
- Basic platformer movement
- Sprite animations
- Collision detection against tile map
- Picking up items
- Providing audio cues to find items in the world
- *Ability to play sounds and music files* (maybe using OpenAL?)
- Compiling to [[https://emscripten.org/][Emscripten]] for playing in the browser ([[https://emscripten.org/docs/porting/Audio.html?highlight=audio][audio]])
- Loading OGG files for music and sound effects ([[https://github.com/nothings/stb/blob/master/stb_vorbis.c][stb_vorbis]])

* Tasks

** DONE Get basic player movement working (running, jumping)
CLOSED: [2022-11-06 Sun 15:35]
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-11-06 Sun 15:35]
:END:

** DONE Write very basic ground collision detection
CLOSED: [2022-11-06 Sun 15:36]
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-11-06 Sun 15:36]
:END:

** DONE Write the beginnings of an in-game map editor
CLOSED: [2022-11-06 Sun 16:22]
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-11-06 Sun 16:22]
:END:

** DONE Make the initial screen a little more interesting
CLOSED: [2022-11-06 Sun 17:06]
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-11-06 Sun 17:06]
:END:

** DONE Basic transitions between screens
CLOSED: [2022-11-06 Sun 17:06]
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-11-06 Sun 17:06]
:END:

** DONE Look into hanging on CI, something with the new line number tracking I think
CLOSED: [2022-11-06 Sun 12:56]
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-11-06 Sun 12:56]
:END:

** DONE Implement saving and loading of game map data
CLOSED: [2022-11-13 Sun 13:23]
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-11-13 Sun 13:23]
:END:
** DONE Implement keyboard bindings for editing commands (like C-s for save, etc)
CLOSED: [2022-11-13 Sun 13:23]
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-11-13 Sun 13:23]
:END:
** TODO Implement some kind of basic UI for entering text prompts (file saving) and selecting items
** TODO The ability to create new screens
** TODO The ability to create and edit portals between screens
*** TODO Enable the UI to select portals either by clicking or key binding
** TODO The ability to change map tiles to draw
** TODO Fix the behavior of navigating between screens
* Off-Stream Tasks

** TODO Reading and writing Mesche data from files
** TODO Improve collision detection, especially upper movement checking while jumping

** TODO Better error handling

** TODO Mesche no longer reports when local variables don't exist.  Why does =t= and others work half the time when they don't exist?

** TODO =equal?= does not complain when not given second param, does weird stuff
** TODO Chunk file name string is being freed before an error can be printed

* How UI Should Work

- The UI library will basically create a tree of UI elements
- The root element covers the whole screen but doesn't render anything
- Any real UI elements are children of that root element
- Any UI element can have its own children
- Game inputs events are sent to the root element
- If the root element can't handle a particular event, it sends the event to each of its children until one of them can handle it

What we need:

- Text prompts entering or editing the name of screens or portals
- Possibly buttons that have actions
- Maybe some kind of selector element for displaying tiles to select, but at the very least something that can display the currently selected tile image/color
